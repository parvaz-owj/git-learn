                            //hello 
//you shold install git on your system of this link "https://git-scm.com/"
creat New folder 
>>git init              // start git in file and project 
>>touch Newwork.txt
>>git status
>>git add Newwork.txt    //adding stage
>>git commit -m 'comment' //comment and update  the change 
>>git log   // look comment in in commit
>>cat Newwork.txt    //show the file
>>git diff  // show what is diffrent in file 
when you adding a file you shold git add file and commit 
>>git add -A  //adding every file
>>git checkout -- Newwork.txt //cancel the change 
>>git reset Newwork.txt  //comeback file when befor commit and in the stage
                                         <<<==========>>>
                                              branch
                                         what is brach ?
When we want several people to work on a project
 and each part is done by someone, we use the branch in Git.// وقتی می خواهیم چند نفر روی یک پروژه کار کنیم و هر بخش را کسی انجام دهد از شاخه در گیت  استفاده می کنیم 

The use of branches in Git is in such a way that each part of the project is given
 to one person and after the work is finished, we merge them.              //  استفاده از شاخه در گیت به این صورت هست که هر قسمت از پروژه به یک نفر داده می شود و بعد از اتمام کار انهها را ادغام می کنیم 
                              _________branch2___  
                             /                    \
                            /                      \
                           /   git branch 3         \merge branch2
 >>git init          -----/------>----\------>-------\--------->-------/--------------->master brach
                     git branch 2      \                              /merge brach3
                                        \                            /
                                         \________________branch3___/

>>git branch                 // show the how many brach in your project
>>git branch name branch       //create new branch
>>git brach python        // create branch the name is python
>>git checkout name branch   // change the branch forexmple         
>>git checkout python       //go python branch 
>>git merge branch name      // Merging all files with the desired branch   ادغام شدن تمامی فایل ها با شاخه مورد نظر 
>>git marge master           //merging master branch 
>>git branch -d python        // deleting python brane 
When we're done, we delete the branch so we don't get confused   >>وقتی کارمان تمام شد شاخه را حذف می کنیم که دچار سردرگمی نشویم
>>git rm file.txt         // delete file.txt  حذف کردنی فایلی که لازم نداریم


            <<=============   how we used Github        =============>>

 To use the GitHub site, you must be a member and have an account     ///      برای استفاده  سایت گیت هاب  باید در ان عضو شویم و حساب داشته باشیم     
>>git clone "https://github.com/parvaz-owj/mywork.git"            // We add the project to our computer   پروژه را به کامپیوتر خود اضافه می کنیم
>>git push origin main              //After the changes, we load the project in the Git repository with this command
بعد از تغییرات پروژه را در مخزن گیت با این دستور بار گزاری می کنیم 
>>git pull origin main                  //After making changes in GitHub, we download the new file in the system with this command
بعد از تغییرا در گیت هاب فایل جدید را در سیستم با این دستود دانلود می کنیم

                                      push       pull
                                         \       /
                                       |  \     /  |
                                       |   \   /   |
                                       |           |
                                       |___________|
                                           Github



           <<=============================== git version (tag)   ================================>>

>>git tag -a v1.4 -m "my version 1.4"     // tag project and come back for changes  پروژه را تگ می نیم که هر موقع از قبل بخواهیم داشته باشیم و کار کنیم باشد یا روی نسخه های دیگر بتوانیم کار کنیم 
>>git show v1.4                             // showing project in version 1.4           به عنوان مثال ورژن 1.4 را به ما نشان می دهد 
>> git checkout v2.0.0                   // change the version and work in this           ورژن را عوض می کند و می توانیم روی آن ورژن کار کنیم 
    

                                                                                                                              [v2.9]
____________________[v1.0]________________[v1.1]_____V____[v1.2]_______________________[v2.0]______________[v2.8]___________>>>>>|>>>>>
                      |                              |                                                                           |
                      |                              |                                                                           V
                      A                              V                                                                           |
                      |__<___(git checkout v1.1)__<__|                                                         ( git tag -a v2.9 -m 'mark version 2.9')
                                   V
                                   V
                           came bake version 1.1